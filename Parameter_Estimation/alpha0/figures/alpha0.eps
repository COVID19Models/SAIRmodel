%!PS-Adobe-2.0 EPSF-2.0
%%Title: I_vs_time_early.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Thu Jun 18 11:04:23 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 698 410
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 698 50 lineto 698 410 lineto 50 410 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (I_vs_time_early.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 18 11:04:23 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 12960.00 7200.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1428 1912 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 1702 M
[ [(Helvetica) 300.0 0.0 true true 0 (2e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 2704 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 2494 M
[ [(Helvetica) 300.0 0.0 true true 0 (4e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 3496 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 3286 M
[ [(Helvetica) 300.0 0.0 true true 0 (6e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 4287 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 4077 M
[ [(Helvetica) 300.0 0.0 true true 0 (8e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 5079 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 4869 M
[ [(Helvetica) 300.0 0.0 true true 0 (10e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 5871 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 5661 M
[ [(Helvetica) 300.0 0.0 true true 0 (12e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 6663 M
63 0 V
11216 0 R
-63 0 V
stroke
1344 6453 M
[ [(Helvetica) 300.0 0.0 true true 0 (14e4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1428 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
1428 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (0)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
2932 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
2932 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (20)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
4436 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
4436 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (40)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
5940 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
5940 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (60)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
7443 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
7443 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (80)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
8947 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
8947 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (100)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
10451 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
10451 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (120)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
11955 1120 M
0 63 V
0 5876 R
0 -63 V
stroke
11955 770 M
[ [(Helvetica) 300.0 0.0 true true 0 (140)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1428 7059 N
0 -5939 V
11279 0 V
0 5939 V
-11279 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
364 4089 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 420.0 0.0 true true 0 (I \(Active infections\))]
] -140.0 MCshow
grestore
LTb
LCb setrgbcolor
7067 280 M
[ [(Helvetica) 420.0 0.0 true true 0 (Time \(in days\))]
] -140.0 MCshow
LTb
% Begin plot #1
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
11652 6734 M
[ [(Helvetica) 380.0 0.0 true true 0 (France: )]
/Symbol reencodeISO def
[(Symbol) 380.0 0.0 true true 0 (a)]
[(Symbol) 304.0 -114.0 true true 0 (0)]
[(Helvetica) 380.0 0.0 true true 0 ( = 0.240 )]
] -88.7 MRshow
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C 1428 1120 CircleF
1654 1120 CircleF
1879 1120 CircleF
2105 1122 CircleF
2330 1125 CircleF
2556 1135 CircleF
2781 1157 CircleF
3007 1198 CircleF
3233 1270 CircleF
3458 1370 CircleF
3684 1499 CircleF
3909 1686 CircleF
4135 1941 CircleF
4361 2254 CircleF
4586 2590 CircleF
4812 2853 CircleF
5037 3005 CircleF
5263 3142 CircleF
5488 3288 CircleF
5714 3366 CircleF
5940 3380 CircleF
6165 3371 CircleF
6391 3391 CircleF
6616 3390 CircleF
6842 3367 CircleF
7068 3324 CircleF
7293 3341 CircleF
7519 3355 CircleF
7744 3314 CircleF
7970 3260 CircleF
8195 3218 CircleF
8421 3191 CircleF
8647 3164 CircleF
8872 3191 CircleF
9098 3238 CircleF
9323 3255 CircleF
9549 3242 CircleF
9774 3252 CircleF
10000 3267 CircleF
12367 6734 CircleF
% End plot #1
% Begin plot #2
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
11652 6164 M
[ [(Helvetica) 380.0 0.0 true true 0 (Italy: )]
[(Symbol) 380.0 0.0 true true 0 (a)]
[(Symbol) 304.0 -114.0 true true 0 (0)]
[(Helvetica) 380.0 0.0 true true 0 ( = 0.271)]
] -88.7 MRshow
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C 1428 1120 Box
1654 1123 Box
1879 1130 Box
2105 1148 Box
2330 1181 Box
2556 1237 Box
2781 1334 Box
3007 1495 Box
3233 1733 Box
3458 2050 Box
3684 2467 Box
3909 2943 Box
4135 3423 Box
4361 3852 Box
4586 4209 Box
4812 4510 Box
5037 4764 Box
5263 4967 Box
5488 5142 Box
5714 5288 Box
5940 5368 Box
6165 5379 Box
6391 5343 Box
6616 5281 Box
6842 5187 Box
7068 5042 Box
7293 4811 Box
7519 4520 Box
7744 4281 Box
7970 4023 Box
8195 3756 Box
8421 3547 Box
8647 3348 Box
8872 3120 Box
9098 2886 Box
9323 2713 Box
9549 2593 Box
9774 2467 Box
10000 2323 Box
12367 6164 Box
% End plot #2
% Begin plot #3
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
11652 5594 M
[ [(Helvetica) 380.0 0.0 true true 0 (Japan: )]
[(Symbol) 380.0 0.0 true true 0 (a)]
[(Symbol) 304.0 -114.0 true true 0 (0)]
[(Helvetica) 380.0 0.0 true true 0 ( = 0.137)]
] -88.7 MRshow
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C 1428 1122 TriUF
1654 1124 TriUF
1879 1125 TriUF
2105 1127 TriUF
2330 1129 TriUF
2556 1131 TriUF
2781 1135 TriUF
3007 1139 TriUF
3233 1143 TriUF
3458 1147 TriUF
3684 1149 TriUF
3909 1153 TriUF
4135 1158 TriUF
4361 1170 TriUF
4586 1188 TriUF
4812 1215 TriUF
5037 1251 TriUF
5263 1306 TriUF
5488 1365 TriUF
5714 1422 TriUF
5940 1472 TriUF
6165 1513 TriUF
6391 1546 TriUF
6616 1563 TriUF
6842 1557 TriUF
7068 1539 TriUF
7293 1517 TriUF
7519 1459 TriUF
7744 1386 TriUF
7970 1332 TriUF
8195 1284 TriUF
8421 1244 TriUF
8647 1213 TriUF
8872 1194 TriUF
9098 1182 TriUF
9323 1174 TriUF
9549 1168 TriUF
9774 1163 TriUF
10000 1159 TriUF
12367 5594 TriUF
% End plot #3
% Begin plot #4
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C LCb setrgbcolor
11652 5024 M
[ [(Helvetica) 380.0 0.0 true true 0 (Switzerland: )]
[(Symbol) 380.0 0.0 true true 0 (a)]
[(Symbol) 304.0 -114.0 true true 0 (0)]
[(Helvetica) 380.0 0.0 true true 0 ( = 0.283)]
] -88.7 MRshow
3.000 UP
6.000 UL
LTb
0.00 0.00 0.00 C 1428 1120 Circle
1654 1120 Circle
1879 1120 Circle
2105 1120 Circle
2330 1121 Circle
2556 1124 Circle
2781 1131 Circle
3007 1143 Circle
3233 1171 Circle
3458 1216 Circle
3684 1299 Circle
3909 1416 Circle
4135 1521 Circle
4361 1610 Circle
4586 1663 Circle
4812 1671 Circle
5037 1642 Circle
5263 1610 Circle
5488 1573 Circle
5714 1522 Circle
5940 1466 Circle
6165 1413 Circle
6391 1366 Circle
6616 1332 Circle
6842 1297 Circle
7068 1258 Circle
7293 1226 Circle
7519 1202 Circle
7744 1187 Circle
7970 1175 Circle
8195 1165 Circle
8421 1157 Circle
8647 1149 Circle
8872 1144 Circle
9098 1140 Circle
9323 1137 Circle
9549 1135 Circle
9774 1134 Circle
10000 1134 Circle
12367 5024 Circle
% End plot #4
% Begin plot #5
4.000 UL
LTb
0.00 0.00 0.00 C 1428 1122 M
114 0 V
114 1 V
114 1 V
114 2 V
114 1 V
114 3 V
114 3 V
113 3 V
114 6 V
114 6 V
114 9 V
114 12 V
114 15 V
114 20 V
114 26 V
114 34 V
114 45 V
114 58 V
114 77 V
114 101 V
114 132 V
113 174 V
114 227 V
114 298 V
114 391 V
114 512 V
114 671 V
114 881 V
114 1154 V
81 1074 V
% End plot #5
% Begin plot #6
stroke
LTb
0.00 0.00 0.00 C 1428 1135 M
114 4 V
114 5 V
114 6 V
114 8 V
114 10 V
114 12 V
114 16 V
113 19 V
114 25 V
114 31 V
114 38 V
114 49 V
114 61 V
114 77 V
114 96 V
114 122 V
114 152 V
114 191 V
114 241 V
114 302 V
114 380 V
113 477 V
114 600 V
114 754 V
114 947 V
114 1190 V
9 111 V
% End plot #6
% Begin plot #7
stroke
LTb
0.00 0.00 0.00 C 1428 1123 M
114 0 V
114 1 V
114 1 V
114 0 V
114 1 V
114 1 V
114 1 V
113 1 V
114 1 V
114 1 V
114 2 V
114 2 V
114 2 V
114 2 V
114 3 V
114 3 V
114 4 V
114 4 V
114 4 V
114 6 V
114 6 V
113 7 V
114 7 V
114 9 V
114 11 V
114 11 V
114 14 V
114 15 V
114 17 V
114 20 V
114 23 V
114 25 V
114 30 V
114 33 V
114 38 V
113 44 V
114 50 V
114 57 V
114 65 V
114 74 V
114 84 V
114 97 V
114 110 V
114 125 V
114 143 V
114 164 V
114 186 V
114 213 V
114 243 V
113 277 V
114 317 V
114 361 V
114 411 V
114 470 V
114 536 V
114 612 V
114 699 V
42 292 V
% End plot #7
% Begin plot #8
stroke
LTb
0.00 0.00 0.00 C 1428 1120 M
114 0 V
114 0 V
114 1 V
114 0 V
114 0 V
114 1 V
114 0 V
113 1 V
114 2 V
114 2 V
114 2 V
114 4 V
114 6 V
114 7 V
114 11 V
114 14 V
114 21 V
114 29 V
114 40 V
114 56 V
114 80 V
113 110 V
114 156 V
114 218 V
114 305 V
114 427 V
114 598 V
114 839 V
114 1175 V
114 1646 V
9 188 V
% End plot #8
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1428 7059 N
0 -5939 V
11279 0 V
0 5939 V
-11279 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
